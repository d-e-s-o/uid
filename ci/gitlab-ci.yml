# The documentation for the contents of this file can be found at:
# https://docs.gitlab.com/ce/ci/yaml/README.html

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
# The recipe for this docker image can be found at:
# https://github.com/rust-lang/docker-rust/blob/7663b3d6680c62dee26c8c20b03a836fc09b6325/1.34.0/stretch/Dockerfile
image: "rust:1.34.0"

variables:
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"
  # Build without debug information enabled to decrease compilation time
  # and binary sizes in CI. This option is assumed to only have marginal
  # effects on the generated code, likely only in terms of section
  # arrangement. See
  # https://doc.rust-lang.org/cargo/reference/environment-variables.html
  # https://doc.rust-lang.org/rustc/codegen-options/index.html#debuginfo
  RUSTFLAGS: '-C debuginfo=0'

.cargo-home: &cargo-home
  CARGO_HOME: $CI_PROJECT_DIR/.cargo

.crates-io-cache: &crates-io-cache
  key: crates-io-cache
  paths:
    # See https://doc.rust-lang.org/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci
    - $CARGO_HOME/bin/
    - $CARGO_HOME/git/db/
    - $CARGO_HOME/registry/index/
    - $CARGO_HOME/registry/cache/
  policy: pull-push

.tarpaulin-cache: &tarpaulin-cache
  key: tarpaulin-cache-$CI_JOB_IMAGE
  paths:
    - tarpaulin/
    - target/debug/
    - Cargo.lock
  policy: pull-push

build-test-debug:cargo:
  artifacts:
    paths:
      - target/
  script:
  - rustc --version && cargo --version
  - cargo build --lib --tests
  - cargo test

build-release:cargo:
  script:
  - rustc --version && cargo --version
  - cargo build --lib --tests --release

lint:clippy:
  image: "rust:latest"
  script:
  - rustup component add clippy
  - cargo clippy --all-targets --all-features -- -D warnings

format:rustfmt:
  image: "rust:latest"
  script:
  - rustup toolchain install nightly -c rustfmt
  - cargo +nightly fmt -- --check

coverage:tarpaulin:
  image: rust:latest
  variables:
    <<: *cargo-home
  cache:
  - <<: *crates-io-cache
  - <<: *tarpaulin-cache
  artifacts:
    paths:
    - tarpaulin-report/
  coverage: '/^\d+.\d+% coverage/'
  script:
  - cargo install cargo-tarpaulin --root tarpaulin/
  - PATH="$PWD/tarpaulin/bin/:$PATH" cargo tarpaulin --skip-clean --out html --output-dir tarpaulin-report/
